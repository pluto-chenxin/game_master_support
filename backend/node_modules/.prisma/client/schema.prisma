// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Change from PostgreSQL to SQLite for easier setup
datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Game {
  id           Int       @id @default(autoincrement())
  name         String
  genre        String // Changed from platform to genre for escape room categories
  releaseDate  DateTime?
  purchaseDate DateTime?
  description  String?
  imageUrl     String?
  puzzles      Puzzle[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Puzzle {
  id          Int           @id @default(autoincrement())
  title       String
  description String?
  imageUrl    String? // Keep for backward compatibility
  status      String        @default("pending") // pending/in-progress/completed/maintenance
  difficulty  Int?          @default(1) // 1-5 scale
  game        Game          @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId      Int
  hints       Hint[]
  maintenance Maintenance[]
  images      PuzzleImage[] // New relation to PuzzleImage model
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model PuzzleImage {
  id        Int      @id @default(autoincrement())
  imageUrl  String
  caption   String?
  isPrimary Boolean  @default(false)
  puzzle    Puzzle   @relation(fields: [puzzleId], references: [id], onDelete: Cascade)
  puzzleId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Hint {
  id        Int      @id @default(autoincrement())
  content   String
  isPremium Boolean  @default(false)
  isUsed    Boolean  @default(false)
  puzzle    Puzzle   @relation(fields: [puzzleId], references: [id], onDelete: Cascade)
  puzzleId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Maintenance {
  id          Int      @id @default(autoincrement())
  description String
  status      String   @default("planned") // planned/in-progress/completed
  fixDate     DateTime
  puzzle      Puzzle   @relation(fields: [puzzleId], references: [id], onDelete: Cascade)
  puzzleId    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
